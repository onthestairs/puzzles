/* Generated by restful-react */

import React from "react";
import { Get, GetProps, useGet, UseGetProps, Mutate, MutateProps, useMutate, UseMutateProps } from "restful-react";

export type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;

export interface Pet {id: number; name: string; tag?: string}

export type Pets = Pet[];

export interface Error {code: number; message: string}

export interface ListPetsQueryParams {limit?: number}

export type ListPetsProps = Omit<GetProps<Pets, Error, ListPetsQueryParams>, "path">;

// List all pets
export const ListPets = (props: ListPetsProps) => (
  <Get<Pets, Error, ListPetsQueryParams>
    path={`/pets`}
    {...props}
  />
);

export type UseListPetsProps = Omit<UseGetProps<Pets, ListPetsQueryParams>, "path">;

// List all pets
export const useListPets = (props: UseListPetsProps) => useGet<Pets, Error, ListPetsQueryParams>(`/pets`, props);


export type CreatePetsProps = Omit<MutateProps<void, Error, void, void>, "path" | "verb">;

// Create a pet
export const CreatePets = (props: CreatePetsProps) => (
  <Mutate<void, Error, void, void>
    verb="POST"
    path={`/pets`}
    {...props}
  />
);

export type UseCreatePetsProps = Omit<UseMutateProps<void, void, void>, "path" | "verb">;

// Create a pet
export const useCreatePets = (props: UseCreatePetsProps) => useMutate<void, Error, void, void>("POST", `/pets`, props);


export type ShowPetByIdProps = Omit<GetProps<Pet, Error, void>, "path"> & {petId: string};

// Info for a specific pet
export const ShowPetById = ({petId, ...props}: ShowPetByIdProps) => (
  <Get<Pet, Error, void>
    path={`/pets/${petId}`}
    {...props}
  />
);

export type UseShowPetByIdProps = Omit<UseGetProps<Pet, void>, "path"> & {petId: string};

// Info for a specific pet
export const useShowPetById = ({petId, ...props}: UseShowPetByIdProps) => useGet<Pet, Error, void>(`/pets/${petId}`, props);

